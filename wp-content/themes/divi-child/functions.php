<?php//functions of the divi child theme of the project rootsandshootseurope/*require_once RS_PLUGIN_PATH.'appcode\helpers\feedback.class.php';require_once RS_PLUGIN_PATH.'appcode\helpers\base.class.php';require_once RS_PLUGIN_PATH.'appcode\webapp\model\country.class.php';*///0. stylesheet vd parent ladenadd_action( 'wp_enqueue_scripts', 'enqueue_parent_styles' );function enqueue_parent_styles() {   wp_enqueue_style( 'parent-style', get_template_directory_uri().'/style.css' );}
//1. verwijdert querystrings in URL van javascript en css bestandenfunction _remove_script_version( $src ){$parts = explode( '?ver', $src );return $parts[0];}add_filter( 'script_loader_src', '_remove_script_version', 10, 1 );add_filter( 'style_loader_src', '_remove_script_version', 10, 1 );/*2. functions on behalf of the project types template*/
function rs_Style_ProjectTypes(){    if(is_page('project-types')) //slug als argument      {        wp_register_style('files_style', plugins_url('/rootsandshoots/appcode/webapp/view/css/files.css','_FILE_'), array());        wp_enqueue_style('files_style');         wp_register_style('projecttype_style', plugins_url('/rootsandshoots/appcode/webapp/view/css/projecttypes.css','_FILE_'), array());        wp_enqueue_style('projecttype_style');    } }add_action('wp_enqueue_scripts', 'rs_Style_ProjectTypes');/*w wellicht geladen bij activ plugin*/function rs_Script_ProjectTypes(){    if(is_page('project-types')) //slug als argument    {        wp_register_script('projecttype_script', plugins_url('/rootsandshoots/appcode/webapp/view/jquery/projecttypes.js','_FILE_'), array('jquery'));        wp_enqueue_script('projecttype_script');    }}add_action('wp_enqueue_scripts', 'rs_Script_ProjectTypes');//add_action('admin_enqueue_scripts', 'rs_Script_ProjectTypes');/*3. function on behalf of the project type form template*/
function rs_StyleAndScript_ProjectTypeForm(){        if(is_page('project-type-form')) //slug als argument    {    wp_register_style('files_style', plugins_url('/rootsandshoots/appcode/webapp/view/css/files.css','_FILE_'), array());    wp_enqueue_style('files_style');     wp_register_style('form_style', plugins_url('/rootsandshoots/appcode/webapp/view/css/form.css','_FILE_'), array());    wp_enqueue_style('form_style');     wp_register_script('projecttypeform_script', plugins_url('/rootsandshoots/appcode/webapp/view/jquery/projecttypeform.js','_FILE_'), array('jquery'));    wp_enqueue_script('projecttypeform_script');    }}add_action('wp_enqueue_scripts', 'rs_StyleAndScript_ProjectTypeForm');/*4. function on behalf of all projects shown to administrator*/function rs_StyleAndScript_AllProjects(){    if(is_page('all-projects')) //slug als argument    {        wp_register_style('files_style', plugins_url('/rootsandshoots/appcode/webapp/view/css/files.css','_FILE_'), array());        wp_enqueue_style('files_style');         wp_register_style('project_style', plugins_url('/rootsandshoots/appcode/webapp/view/css/allprojects.css','_FILE_'), array());        wp_enqueue_style('project_style');        wp_register_script('project_script', plugins_url('/rootsandshoots/appcode/webapp/view/jquery/all_projects.js','_FILE_'), array('jquery'));        wp_enqueue_script('project_script');        wp_register_script('excel_script', plugins_url('/rootsandshoots/appcode/webapp/view/jquery/plugins/jquery.table2excel.js','_FILE_'), array('jquery'));        wp_enqueue_script('excel_script');        wp_register_style('pagination_style', plugins_url('/rootsandshoots/appcode/webapp/view/jquery/plugins/datatable-master/css/datatable.min.css','_FILE_'), array());        wp_enqueue_style('pagination_style');        wp_register_script('pagination_script', plugins_url('/rootsandshoots/appcode/webapp/view/jquery/plugins/datatable-master/js/datatable.js','_FILE_'), array('jquery'));        wp_enqueue_script('pagination_script');    }}add_action('wp_enqueue_scripts', 'rs_StyleAndScript_AllProjects');/*5. functions on behalf of the project form template*/function rs_StyleAndScript_ProjectForm(){        if(is_page('project-form')) //slug als argument    {    wp_register_style('files_style', plugins_url('/rootsandshoots/appcode/webapp/view/css/files.css','_FILE_'), array());    wp_enqueue_style('files_style');     wp_register_style('projectform_style', plugins_url('/rootsandshoots/appcode/webapp/view/css/projectform.css','_FILE_'), array());    wp_enqueue_style('projectform_style');     wp_register_script('projectform_script', plugins_url('/rootsandshoots/appcode/webapp/view/jquery/projectform.js','_FILE_'), array('jquery'));    wp_enqueue_script('projectform_script');    }}add_action('wp_enqueue_scripts', 'rs_StyleAndScript_ProjectForm');/*6. function on behalf of projects shown to visitors*/function rs_StyleAndScript_Projects(){    if(is_page('projects')) //slug als argument    {        wp_register_style('files_style', plugins_url('/rootsandshoots/appcode/webapp/view/css/files.css','_FILE_'), array());        wp_enqueue_style('files_style');         wp_register_style('project_style', plugins_url('/rootsandshoots/appcode/webapp/view/css/projects.css','_FILE_'), array());        wp_enqueue_style('project_style');        wp_register_script('project_script', plugins_url('/rootsandshoots/appcode/webapp/view/jquery/all_projects.js','_FILE_'), array('jquery'));        wp_enqueue_script('project_script');    }}add_action('wp_enqueue_scripts', 'rs_StyleAndScript_Projects');function recent_posts_function() {   query_posts(array('orderby' => 'date', 'order' => 'DESC' , 'showposts' => 1));   if (have_posts()) :      while (have_posts()) : the_post();         $return_string = '<a href="'.get_permalink().'">'.get_the_title().'</a>';      endwhile;   endif;   wp_reset_query();   return $return_string;}/*7. Add custom user roles to the WP settings*/add_role( 'member', __('Member' ), array( ) );add_role( 'project-head', __('Project Head' ), array( ) );add_role( 'coordinator', __('Coordinator' ), array( ) ); // Change the default role in the WP settingsfunction client_default_role($value){    // You can also add conditional tags here and return whatever    //return 'subscriber'; // This is changed    return 'member'; // This allows default};add_filter('pre_option_default_role', 'client_default_role');/*8. remove admin bar on the front end*/function remove_admin_bar() {if (!current_user_can('administrator') && !is_admin()) {  show_admin_bar(false);}}add_action('after_setup_theme', 'remove_admin_bar');/*9. try out*/function register_shortcodes(){   add_shortcode('recent-posts', 'recent_posts_function');   //add_shortcode('countries', 'selectAllCountries');}add_action( 'init', 'register_shortcodes');//10. register third menufunction account_menu() {  register_nav_menu('account-menu',__( 'Account Menu' ));}add_action( 'init', 'account_menu' );//11. functions on behalve of member age formfunction rs_memberageform() {   ob_start();   get_template_part('member-age-form');   return ob_get_clean();   } add_shortcode( 'member_age_form_shortcode', 'rs_memberageform' );function rs_Style_MemberAgeForm(){    if(is_page('member-age-form')) //slug als argument    {        wp_register_style('files_style', plugins_url('/rootsandshoots/appcode/webapp/view/css/files.css','_FILE_'), array());        wp_enqueue_style('files_style');         wp_register_style('form_style', plugins_url('/rootsandshoots/appcode/webapp/view/css/form.css','_FILE_'), array());        wp_enqueue_style('form_style');         wp_register_style('maf_style', plugins_url('/rootsandshoots/appcode/webapp/view/css/maf.css','_FILE_'), array());        wp_enqueue_style('maf_style');            }}add_action('wp_enqueue_scripts', 'rs_Style_MemberAgeForm');//12. function on behalve of member form accountfunction rs_memberformaccount() {   ob_start();   get_template_part('member-form-account');   return ob_get_clean();   } add_shortcode( 'member_form_account_shortcode', 'rs_memberformaccount' );//13. function on behalve of member form profilefunction rs_memberformprofile() {   ob_start();   get_template_part('member-form-profile');   return ob_get_clean();   } add_shortcode( 'member_form_profile_shortcode', 'rs_memberformprofile' );//14. function on behalve of member form notesfunction rs_memberformnotes() {   ob_start();   get_template_part('member-form-notes');   return ob_get_clean();   } add_shortcode( 'member_form_notes_shortcode', 'rs_memberformnotes' );//15. function on behalf of memberformfunction rs_Style_MemberForm(){    if(is_page('member-form')) //slug als argument    {        wp_register_style('files_style', plugins_url('/rootsandshoots/appcode/webapp/view/css/files.css','_FILE_'), array());        wp_enqueue_style('files_style');         wp_register_style('form_style', plugins_url('/rootsandshoots/appcode/webapp/view/css/form.css','_FILE_'), array());        wp_enqueue_style('form_style');         wp_register_style('memberform_style', plugins_url('/rootsandshoots/appcode/webapp/view/css/memberform.css','_FILE_'), array());        wp_enqueue_style('memberform_style');		wp_register_script('memberform_script', plugins_url('/rootsandshoots/appcode/webapp/view/jquery/memberform.js','_FILE_'), array('jquery'));        wp_enqueue_script('memberform_script');    }}add_action('wp_enqueue_scripts', 'rs_Style_MemberForm');//16. password strengthfunction rs_Script_Registerpage(){    if(is_page('register')) //slug als argument    {      wp_enqueue_script( 'password-strength-meter' );      //pwsL10n staat in register.js      wp_localize_script( 'password-strength-meter', 'pwsL10n', array(      'empty' => __( 'Strength indicator' ),      'short' => __( 'Very weak password' ),      'bad' => __( 'Weak password' ),      'good' => _x( 'Medium password', 'password strength' ),      'strong' => __( 'Strong password' ),      'mismatch' => __( 'Mismatch' )        ) );              wp_enqueue_script('tp3_script', get_stylesheet_directory_uri() . '/jquery/register.js', array( 'jquery' ), '1.0.0' );      }//end if }add_action('wp_enqueue_scripts', 'rs_Script_Registerpage');//17. attempt to have 2 registration formsfunction add_hidden_role_field(){    if (isset($_GET['role'])){        echo '<input id="hidden_role" type="hidden" tabindex="20" size="25" value="'.$_GET['role'].'" name="role"/>';    }}add_action('register_form','add_hidden_role_field');//18. function on behalf of project form descriptionfunction rs_projectformdescription() {   ob_start();   get_template_part('project-form-description');   return ob_get_clean();   } add_shortcode( 'project_form_description_shortcode', 'rs_projectformdescription' );//19.function on behalf of project form stufffunction rs_projectformstuff() {   ob_start();   get_template_part('project-form-stuff');   return ob_get_clean();   } add_shortcode( 'project_form_stuff_shortcode', 'rs_projectformstuff' );//20.function on behalf of project form reportfunction rs_projectformreport() {   ob_start();   get_template_part('project-form-report');   return ob_get_clean();   } add_shortcode( 'project_form_report_shortcode', 'rs_projectformreport' );//21. function on behalve of ajaxtestingfunction rs_ajaxtest() {   ob_start();   get_template_part('ajaxtestsjabloon');   return ob_get_clean();   } add_shortcode( 'ajaxtest_shortcode', 'rs_ajaxtest' ); //22. media selector testing functiesadd_action( 'tp5_hook', 'media_selector_print_scripts' );function media_selector_print_scripts() {	$my_saved_attachment_post_id = get_option( 'media_selector_attachment_id', 0 );	?>	<script type='text/javascript'>		jQuery( document ).ready( function( ) {			// Uploading files			var file_frame;			var wp_media_post_id = wp.media.model.settings.post.id; // Store the old id			var set_to_post_id = jQuery('#image_attachment_id').val();			alert(set_to_post_id);			jQuery('#upload_image_button').on('click', function( event ){				event.preventDefault();				// If the media frame already exists, reopen it.				if ( file_frame ) {					// Set the post ID to what we want					file_frame.uploader.uploader.param( 'post_id', set_to_post_id );					// Open frame					file_frame.open();					return;				} else {					// Set the wp.media post id so the uploader grabs the ID we want when initialised					wp.media.model.settings.post.id = set_to_post_id;				}				// Create the media frame.				file_frame = wp.media.frames.file_frame = wp.media({					title: 'Select a image to upload',					button: {						text: 'Use this image',					},					multiple: false	// Set to true to allow multiple files to be selected				});				// When an image is selected, run a callback.				file_frame.on( 'select', function() {					// We set multiple to false so only get one image from the uploader					attachment = file_frame.state().get('selection').first().toJSON();					// Do something with attachment.id and/or attachment.url here					jQuery( '#image-preview' ).attr( 'src', attachment.url ).css( 'width', 'auto' );					jQuery( '#image_attachment_id' ).val( attachment.id );					alert('attachmentid; '.attachment.id);					// Restore the main post ID					wp.media.model.settings.post.id = wp_media_post_id;				});					// Finally, open the modal					file_frame.open();			});			// Restore the main ID when the add media button is pressed			jQuery( 'a.add_media' ).on( 'click', function() {				alert('hi');				wp.media.model.settings.post.id = wp_media_post_id;			});		});	</script>		<?php}add_action('testinghook','media_selector_tryout');function media_selector_tryout()  {// Save attachment ID	if ( isset( $_POST['submit_image_selector'] ) && isset( $_POST['image_attachment_id'] ) ) :		update_option( 'media_selector_attachment_id', absint( $_POST['image_attachment_id'] ) );	endif;	wp_enqueue_media(); //Enqueues all scripts, styles, settings, and templates necessary to use all media JS APIs.	?>	<form method='post'>		<div class='image-preview-wrapper'>			<img id='image-preview' src='<?php delete_option('media_selector_attachment_id'); echo wp_get_attachment_url( get_option( 'media_selector_attachment_id' ) );  ?>' height='100'>		</div>		<input id="upload_image_button" type="button" class="button" value="<?php _e( 'Upload image' ); ?>" />		<input type='hidden' name='image_attachment_id' id='image_attachment_id' value='<?php echo get_option( 'media_selector_attachment_id' ); ?>'>		<input type="submit" name="submit_image_selector" value="Save" class="button-primary">	</form><?php}//waar wordt media_selector_attachment_id opgeslagen? Wellicht in cache.//Telkens op de save geklikt w, w een nieue media_selector_attachment_id opgeslagen.//wp_get_attachment_url returns a full URI of an attachment file or false on failure. In deze laatste situatie is het src attribuut leeg.//get_option Retrieves an option value based on an option name.//delete_option deletes an option in the cache probably.//options worden weelicht in cache opgeslagen en niet in de tabel wp_options//image_attachment_id kan ook  ingevuld zijn zonder foto op testpagina5//Belangrijk: er kn pas een nieuwe foto opgeladen worden, nadat de vorige opgeslaan is//23. hide the posts and images uploaded by other users except for administrator on /wp-admin/edit.php and /wp-admin/upload.phpfunction hide_posts_media_by_other($query) {	global $pagenow;	if( ( 'edit.php' != $pagenow && 'upload.php' != $pagenow   ) || !$query->is_admin ){		return $query;	}	if( !current_user_can( 'manage_options' ) ) {		global $user_ID;		$query->set('author', $user_ID );	}	return $query;}add_filter('pre_get_posts', 'hide_posts_media_by_other');/*hide the images when the user click the ‘Add Media’ button above the wordpress editor. */add_filter( 'posts_where', 'hide_attachments_wpquery_where' );function hide_attachments_wpquery_where( $where ){	global $current_user;	if( !current_user_can( 'manage_options' ) ) {		if( is_user_logged_in() ){			if( isset( $_POST['action'] ) ){				// library query				if( $_POST['action'] == 'query-attachments' ){					$where .= ' AND post_author='.$current_user->data->ID;				}			}		}	}	return $where;}   /*function wpse85351_hide_submenus() {      if(!current_user_can('edit_posts')){           global $submenu;           unset($submenu['upload.php'][5]); // hide the Media Library      }}add_action('admin_menu', 'wpse85351_hide_submenus');  */ /*24. no media library in media seelctor*/function wpse85351_media_strings($strings) {    // only for subscribers:    if(!current_user_can('edit_posts')){        // remove "mediaLibraryTitle"        unset($strings["mediaLibraryTitle"]);    }    return $strings;}add_filter('media_view_strings','wpse85351_media_strings');/*25 no attachment details in media selector:not working*//*add_action('admin_head-post.php', 'hide_media_stuff_wpse_120894' );add_action('admin_head-post-new.php', 'hide_media_stuff_wpse_120894' );function hide_media_stuff_wpse_120894(){    ?>    <style type="text/css">        .attachment-details [data-setting="title"],        .attachment-details [data-setting="caption"],        .attachment-details [data-setting="alt"],        .attachment-details [data-setting="description"],        div.attachment-display-settings        {            display:none        }    </style>    <?php} * */ 
?>